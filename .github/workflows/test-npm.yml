name: Test npm package

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Package version to test'
        required: true

jobs:
  build:

    runs-on: ${{ matrix.platform }}

    strategy:
      matrix:
        node-version: [ 16.x, 18.x, 20.x, 22.x, 23.x ]
        platform: [ ubuntu-latest, windows-latest, macos-13, macos-14 ]

    steps:
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - name: (if on Ubuntu) install fonts
      run: sudo apt-get install -y fonts-ubuntu || true
      if: ${{ contains(matrix.platform, 'ubuntu') }}
    - name: Set up the unit tests
      run: |
        curl https://codeload.github.com/mmomtchev/ffmpeg/zip/refs/tags/v${{ github.event.inputs.version }} --output repo.zip
        unzip repo.zip
        mv ffmpeg-${{ github.event.inputs.version }}/test .
        npm install @types/chai@4.3.10 @types/mocha @types/node chai@4.3.10 magickwand.js mocha ts-node readable-stream-clone
    - name: Install from npm
      run: npm i @mmomtchev/ffmpeg@${{ github.event.inputs.version }}
    - name: Node options
      shell: bash
      run: echo 'MOCHA_NODE_OPTIONS=--v8-expose-gc' >> $GITHUB_ENV
      if: matrix.node-version != '23.x'
    - name: Node options
      shell: bash
      run: echo 'MOCHA_NODE_OPTIONS=--node-option=no-experimental-strip-types,expose-gc' >> $GITHUB_ENV
      if: matrix.node-version == '23.x'
    - name: Run the unit tests
      run: |
        cd test
        npx mocha ${{ env.MOCHA_NODE_OPTIONS }} --reporter=tap -r ts-node/register --timeout 120000 *.cjs *.mjs *.ts
      env:
        TS_NODE_PROJECT: tsconfig.test.json
